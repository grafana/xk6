# File generated by cdo from docs/CONTRIBUTING.md; DO NOT EDIT.

SHELL=bash
.SHELLFLAGS=-e -o pipefail -c

.PHONY: __help__
__help__:
	@echo 'Usage: make [target]'
	@echo ''
	@echo 'Targets:'
	@echo '  all      Clean build'
	@echo '  build    Build custom k6 with extension'
	@echo '  clean    Clean the working directory'
	@echo '  coverage View the test coverage report'
	@echo '  doc      Update documentation'
	@echo '  format   Format the go source codes'
	@echo '  it       Run the integration tests'
	@echo '  lint     Run the linter'
	@echo '  makefile Generate the Makefile'
	@echo '  schema   Contribute to the JSON schema'
	@echo '  security Run security and vulnerability checks'
	@echo '  test     Run the tests'

# Clean build
.PHONY: all
all: clean format security lint test build it doc makefile

# Build custom k6 with extension
.PHONY: build
build: 
	@(\
		goreleaser build --clean --snapshot --single-target --id xk6;\
	)

# Clean the working directory
.PHONY: clean
clean: 
	@(\
		rm -rf ./xk6 ./xk6.exe ./k6 ./k6.exe ./coverage.txt ./build ./dist;\
	)

# View the test coverage report
.PHONY: coverage
coverage: test
	@(\
		go tool cover -html=coverage.txt;\
	)

# Update documentation
.PHONY: doc
doc: 
	@(\
		mdcode update docs/workflows/README.md;\
		mdcode update examples/README.md;\
		go run ./tools/docsme --heading 1 -o README.md;\
	)

# Format the go source codes
.PHONY: format
format: 
	@(\
		go fmt ./...;\
	)

# Run the integration tests
.PHONY: it
it: 
	@(\
		bats -r .;\
	)

# Run the linter
.PHONY: lint
lint: 
	@(\
		golangci-lint run ./...;\
	)

# Generate the Makefile
.PHONY: makefile
makefile: 
	@(\
		cdo --makefile Makefile;\
	)

# Contribute to the JSON schema
.PHONY: schema
schema: 
	@(\
		yq -o=json -P docs/compliance.schema.yaml > docs/compliance.schema.json;\
		go-jsonschema --capitalization ID -p lint --only-models -o internal/lint/compliance_gen.go docs/compliance.schema.yaml;\
	)

# Run security and vulnerability checks
.PHONY: security
security: 
	@(\
		gosec -quiet ./...;\
		govulncheck ./...;\
	)

# Run the tests
.PHONY: test
test: 
	@(\
		go test -count 1 -race -coverprofile=coverage.txt -timeout 2m ./...;\
	)

